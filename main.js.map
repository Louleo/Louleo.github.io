{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/income-calculator/income-calculator.component.ts","./src/app/income-calculator/income-calculator.component.html","./src/app/loan-calculator/loan-calculator.component.ts","./src/app/loan-calculator/loan-calculator.component.html","./src/app/services/tax-calc.service.ts","./src/app/string-refactor/string-refactor.component.ts","./src/app/string-refactor/string-refactor.component.html","./src/app/tax-return-calculator/tax-return-calculator.component.ts","./src/app/tax-return-calculator/tax-return-calculator.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {IncomeCalculatorComponent} from './income-calculator/income-calculator.component';\nimport {LoanCalculatorComponent} from './loan-calculator/loan-calculator.component';\nimport {HomePageComponent} from './home-page/home-page.component';\nimport {StringRefactorComponent} from './string-refactor/string-refactor.component';\nimport {TaxReturnCalculatorComponent} from \"./tax-return-calculator/tax-return-calculator.component\";\n\n\nexport const routes: Routes = [\n  {path: 'income', component: IncomeCalculatorComponent, data: {\n    navBarName: 'Income',\n      cardName: 'Income Calculator',\n      order: 1\n    } },\n  {path: 'loan', component: LoanCalculatorComponent, data: {\n      navBarName: 'Loan',\n      cardName: 'Loan Calculator',\n      order: 2\n    }},\n  {path: 'string-refactor', component: StringRefactorComponent, data: {\n    cardName: 'String Refactor',\n      order: 3\n    }},\n  {path: 'tax-return-1', component: TaxReturnCalculatorComponent, data: {\n      cardName: 'Tax Return Calculator 1',\n      order: 4\n    }},\n  {path : '', component: HomePageComponent},\n  {path: '**', component: HomePageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: LocationStrategy, useClass: PathLocationStrategy\n    }\n  ]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  title = 'Collections@louleo';\n\n  ngOnInit(){\n    document.title = this.title;\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"shadow\">\n  <mat-toolbar-row>\n    <button mat-icon-button>\n    </button>\n    <a [routerLink]=\"'/'\" mat-button class=\"app-bar-link\"><h1>Collections@louleo</h1></a>\n    <span class=\"menu-spacer\"></span>\n    <div class=\"ml-auto\">\n      <a mat-button [routerLink]=\"'/income'\" class=\"app-bar-link mx-3\">Income</a>\n      <a mat-button [routerLink]=\"'/loan'\" class=\"app-bar-link mx-3\">Loan</a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n\n\n<div class=\"container mt-5\" role=\"main\">\n  <router-outlet></router-outlet>\n\n  <svg id=\"clouds\" alt=\"Gray Clouds Background\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2611.084\" height=\"485.677\" viewBox=\"0 0 2611.084 485.677\">\n    <path id=\"Path_39\" data-name=\"Path 39\" d=\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\" transform=\"translate(142.69 -634.312)\" fill=\"#eee\"/>\n  </svg>\n\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IncomeCalculatorComponent } from './income-calculator/income-calculator.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSelect, MatSelectModule} from '@angular/material/select';\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { LoanCalculatorComponent } from './loan-calculator/loan-calculator.component';\nimport { CommonModule } from '@angular/common';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { StringRefactorComponent } from './string-refactor/string-refactor.component';\nimport { TaxReturnCalculatorComponent } from './tax-return-calculator/tax-return-calculator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IncomeCalculatorComponent,\n    LoanCalculatorComponent,\n    HomePageComponent,\n    StringRefactorComponent,\n    TaxReturnCalculatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatOptionModule,\n    MatInputModule,\n    FormsModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatCheckboxModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {routes} from '../app-routing.module';\nimport {Route} from '@angular/router';\n\n\ninterface ToolingCard {\n  name: string;\n  path: string;\n  order?: number;\n  imageUri?: string;\n}\n\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\n\nexport class HomePageComponent implements OnInit {\n\n  toolingCardCollection: ToolingCard[];\n  constructor() { }\n\n  ngOnInit(): void {\n\n    const validRoutes = routes.filter((route: Route) => (route.data));\n\n    this.toolingCardCollection = validRoutes.map((route: Route) => {\n      if (route.data){\n        const toolingCard: ToolingCard = {\n          name: route.data.cardName,\n          path: route.path,\n        };\n        if (route.data.order){\n          toolingCard.order = route.data.order;\n        }\n        if (route.data.imageUri){\n          toolingCard.imageUri = route.data.imageUri;\n        }\n        return toolingCard;\n      }\n    });\n  }\n\n}\n","<h1>Welcome to tooling collections @louleo</h1>\n<h2>Hopefully, you could find something useful below:</h2>\n<div class=\"row\">\n  <div *ngFor=\"let toolingCard of toolingCardCollection\" class=\"col-lg-4 mt-4\">\n    <a [routerLink]=\"'/'+toolingCard.path\" class=\"hover-none\">\n      <mat-card class=\"home-card\">\n        <img src=\"{{toolingCard.imageUri}}\" mat-card-image alt=\"\">\n        <mat-card-header>\n          <mat-card-title>\n            {{toolingCard.name}}\n          </mat-card-title>\n        </mat-card-header>\n      </mat-card>\n    </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {TaxCalcService} from \"../services/tax-calc.service\";\n\n\nfunction incomeInputValueValidator(): ValidatorFn{\n  return (control: AbstractControl): ValidationErrors | null => {\n    const calculationType = control.get('calculatorType');\n    const afterTaxValue = control.get('afterTaxValue');\n    const beforeTaxValue = control.get('beforeTaxValue');\n    if (calculationType.value === 1){\n      return afterTaxValue.value === 0 ? {incomeInput: {value: control.value}} : null;\n    }\n    if (calculationType.value === 2){\n      return beforeTaxValue.value === 0 ? {incomeInput: {value: control.value}} : null;\n    }\n    return null;\n  };\n}\n\nfunction frequencyValidator(): ValidatorFn{\n  return (control: AbstractControl): ValidationErrors | null => {\n    const customWeeks = control.get('customWeeks');\n    const customHours = control.get('customHours');\n    const customDays = control.get('customDays');\n    const hoursPerWeek = control.get('hoursPerWeek');\n    const weeksPerYear = control.get('weeksPerYear');\n    const daysPerWeek = control.get('daysPerWeek');\n    if (customWeeks.value){\n      return (weeksPerYear.value > 52 && weeksPerYear.value <= 0) ? {frequencyValidator: {value: control.value}} : null;\n    }\n    if (customDays.value){\n      return (daysPerWeek.value > 7 && daysPerWeek.value <= 0) ? {frequencyValidator: {value: control.value}} : null;\n    }\n    if (customHours.value){\n      const days = customDays.value ? customDays.value : 7;\n      return (hoursPerWeek.value > (days * 24) && hoursPerWeek.value <= 0) ? {frequencyValidator: {value: control.value}} : null;\n    }\n  };\n}\n\n\n@Component({\n  selector: 'app-income-calculator',\n  templateUrl: './income-calculator.component.html',\n  styleUrls: ['./income-calculator.component.css']\n})\n\n\nexport class IncomeCalculatorComponent implements OnInit {\n\n  constructor(\n    private taxCalcService: TaxCalcService\n  ) { }\n\n  defaultHoursPerWeek = 38;\n  defaultWeeksPerYear = 46;\n  defaultDaysPerWeek = 5;\n\n  incomeCalculatorForm = new FormGroup({\n    calculatorType: new FormControl(0),\n    afterTaxValue: new FormControl(0, [incomeInputValueValidator]),\n    beforeTaxValue: new FormControl(0, [incomeInputValueValidator]),\n    superIncl: new FormControl(false),\n    frequency: new FormControl(1, Validators.required),\n    customWeeks: new FormControl(false),\n    customHours: new FormControl(false),\n    customDays: new FormControl(false),\n    hoursPerWeek: new FormControl(this.defaultHoursPerWeek, [frequencyValidator]),\n    weeksPerYear: new FormControl(this.defaultWeeksPerYear, [frequencyValidator]),\n    daysPerWeek: new FormControl(this.defaultDaysPerWeek, [frequencyValidator])\n  });\n\n  superRate = 0.090;\n\n  incomePerYear = 0;\n\n  selections = [\n    {value: 1, viewValue: 'Income After Tax'},\n    {value: 2, viewValue: 'Income Before Tax'}\n  ];\n\n  frequencies = [\n    {value: 1, viewValue: 'Yearly'},\n    {value: 12, viewValue: 'Monthly'},\n    {value: 26, viewValue: 'Fortnightly'},\n    {value: 52, viewValue: 'Weekly'},\n    {value: 160, viewValue: 'Daily'},\n    {value: 1976, viewValue: 'Hourly'}\n  ];\n\n  validationMessages = [];\n\n  ngOnInit(): void {\n  }\n\n  getFrequencyNameByValue(value): string{\n    const frequency = this.frequencies.find(freq => (freq.value === value));\n    if (frequency){\n      return frequency.viewValue;\n    }\n  }\n\n  getWeeksPerYear(): number{\n    const frequency = this.frequencies.find(freq => (freq.viewValue === 'Weekly'));\n    if (this.getFormValue('customWeeks') && this.getFormValue('weeksPerYear')){\n      return this.incomeCalculatorForm.get('weeksPerYear').value;\n    }\n    return frequency.value;\n  }\n\n  getHoursPerYear(): number{\n    const frequency = this.frequencies.find(freq => (freq.viewValue === 'Hourly'));\n    if (this.getFormValue('customHours') && this.getFormValue('hoursPerWeek')){\n      return this.incomeCalculatorForm.get('hoursPerWeek').value * this.getWeeksPerYear();\n    }\n    return frequency.value;\n  }\n\n  getDaysPerYear(): number{\n    const frequency = this.frequencies.find(freq => (freq.viewValue === 'Daily'));\n    if (this.getFormValue('customDays') && this.getFormValue('daysPerWeek')){\n      return this.incomeCalculatorForm.get('daysPerWeek').value * this.getWeeksPerYear();\n    }\n    return frequency.value;\n  }\n\n  getFrequency(): number{\n    const frequency = this.incomeCalculatorForm.get('frequency').value;\n    const freqName = this.getFrequencyNameByValue(frequency);\n    switch (freqName){\n      case 'Weekly':\n        return this.getWeeksPerYear();\n      case 'Daily':\n        return this.getDaysPerYear();\n      case 'Hourly':\n        return this.getHoursPerYear();\n      default:\n        return frequency;\n    }\n  }\n\n  getFormValue(name: string): any{\n    return this.incomeCalculatorForm.get(name).value;\n  }\n\n  setFormValue(name: string, value: any): void{\n    this.incomeCalculatorForm.get(name).setValue(value);\n  }\n\n  resetFormValue(name: string, defaultValue?: any): void{\n    this.incomeCalculatorForm.get(name).reset(defaultValue);\n  }\n\n  calculateAfterTax(): void{\n    let income = this.getFormValue('afterTaxValue') * this.getFrequency();\n\n    if (this.getFormValue('superIncl')){\n      income = (1 - this.superRate) * income;\n    }\n\n    this.incomePerYear = this.taxCalcService.calculateAfterTax(income);\n  }\n\n  calculateBeforeTax(): void{\n    let income = this.getFormValue('beforeTaxValue') * this.getFrequency();\n\n    if (this.getFormValue('superIncl')){\n      income = (1 - this.superRate) * income;\n    }\n\n    this.incomePerYear = this.taxCalcService.calculateBeforeTax(income);\n  }\n\n  getCalculatorType(): number{\n    return this.incomeCalculatorForm.get('calculatorType').value;\n  }\n\n  calculate(): void{\n    if (!this.incomeCalculatorForm.valid){\n      return;\n    }\n    const calculatorType = this.incomeCalculatorForm.get('calculatorType').value;\n\n    if (calculatorType === 1){\n      this.calculateAfterTax();\n    }\n\n    if (calculatorType === 2){\n      this.calculateBeforeTax();\n    }\n  }\n\n}\n","<h1 class=\"text-center income-title\">Income Calculator</h1>\n<div class=\"text-align-left income-main-container\">\n  <form [formGroup]=\"incomeCalculatorForm\">\n    <div class=\"income-selector-wrapper text-center\">\n      <mat-form-field class=\"income-selector-form-field\">\n        <mat-label>Select Income You Would Like To Calculate</mat-label>\n        <mat-select formControlName=\"calculatorType\">\n          <mat-option *ngFor=\"let selection of selections\" [value]=\"selection.value\">\n            {{selection.viewValue}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"after-tax-wrapper\" *ngIf=\"getCalculatorType() === 1\">\n      <mat-form-field class=\"example-form-field w-100\">\n        <mat-label>Input Your Income Before Tax</mat-label>\n        <input matInput type=\"text\" formControlName=\"afterTaxValue\" >\n        <button mat-button *ngIf=\"getFormValue('afterTaxValue')\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"setFormValue('afterTaxValue',0)\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n    <div class=\"before-tax-wrapper\" *ngIf=\"getCalculatorType() === 2\">\n      <mat-form-field class=\"example-form-field w-100\">\n        <mat-label>Input Your Income After Tax</mat-label>\n        <input matInput type=\"text\" formControlName=\"beforeTaxValue\" >\n        <button mat-button *ngIf=\"getFormValue('beforeTaxValue')\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"setFormValue('beforeTaxValue',0)\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n    <div class=\"others-wrapper\" *ngIf=\"getCalculatorType()\">\n      <mat-form-field class=\"w-100\">\n        <mat-label>Does your income include super?</mat-label>\n        <mat-select formControlName=\"superIncl\">\n          <mat-option [value]=\"true\">\n            Yes\n          </mat-option>\n          <mat-option [value]=\"false\">\n            No\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"w-100\">\n        <mat-label>Income Payment Frequency</mat-label>\n        <mat-select formControlName=\"frequency\">\n          <mat-option *ngFor=\"let frequency of frequencies\" [value]=\"frequency.value\">\n            {{frequency.viewValue}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-checkbox formControlName=\"customWeeks\" (click)=\"resetFormValue('weeksPerYear', defaultWeeksPerYear)\">I would like to customize the number of working weeks per year.</mat-checkbox>\n      <mat-form-field class=\"w-100\" *ngIf=\"getFormValue('customWeeks')\">\n        <mat-label>Number of working weeks per year</mat-label>\n        <input type=\"number\" matInput formControlName=\"weeksPerYear\">\n      </mat-form-field>\n      <mat-checkbox formControlName=\"customDays\" (click)=\"resetFormValue('daysPerWeek', defaultDaysPerWeek)\">I would like to customize the number of working days per week.</mat-checkbox>\n      <mat-form-field class=\"w-100\" *ngIf=\"getFormValue('customDays')\">\n        <mat-label>Number of working days per week</mat-label>\n        <input type=\"number\" matInput formControlName=\"daysPerWeek\">\n      </mat-form-field>\n      <mat-checkbox formControlName=\"customHours\" (click)=\"resetFormValue('hoursPerWeek', defaultHoursPerWeek)\">I would like to customize the number of working hours per week.</mat-checkbox>\n      <mat-form-field class=\"w-100\" *ngIf=\"getFormValue('customHours')\">\n        <mat-label>Number of working hours per week</mat-label>\n        <input type=\"number\" matInput formControlName=\"hoursPerWeek\">\n      </mat-form-field>\n    </div>\n  </form>\n\n  <div class=\"submit-button-wrapper text-center mt-3\" *ngIf=\"getCalculatorType() && incomeCalculatorForm.valid\">\n    <button  mat-raised-button color=\"primary\" class=\"submit-button\" (click)=\"calculate()\">\n      GO!\n    </button>\n  </div>\n  <div class=\"results-wrapper mb-5\" *ngIf=\"incomePerYear!==0\">\n    <h3>Your income {{getCalculatorType() == 1? 'after':'before'}} tax would be ${{incomePerYear.toFixed(2)}} per year</h3>\n    <h4>Which means you could get ${{(incomePerYear/12).toFixed(2)}} per month...</h4>\n    <h4>Which means you could get ${{(incomePerYear/26).toFixed(2)}} per fortnight...</h4>\n    <h4>Which means you could get ${{(incomePerYear/getWeeksPerYear()).toFixed(2)}} per week...</h4>\n    <h4>Which means you could get ${{(incomePerYear/getDaysPerYear()).toFixed(2)}} per day...</h4>\n    <h4>Which means you could get ${{(incomePerYear/getHoursPerYear()).toFixed(2)}} per hour...</h4>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loan-calculator',\n  templateUrl: './loan-calculator.component.html',\n  styleUrls: ['./loan-calculator.component.css']\n})\nexport class LoanCalculatorComponent implements OnInit {\n\n  constructor() { }\n\n\n  housePrice = 1000000;\n\n  deposit = 200000;\n\n  interestRate = 3.5;\n\n  term = 30;\n\n  repay = 0;\n  ngOnInit(): void {\n  }\n\n  repaymentCalculation(){\n    const loan = this.housePrice - this.deposit;\n    const rate = this.interestRate / 100.00;\n    const repay = loan * rate * (Math.pow((1 + rate), this.term)) / (((Math.pow((1 + rate), this.term)) - 1) * 12);\n    this.repay = repay;\n  }\n}\n","<div class=\"container\">\n<mat-form-field class=\"example-form-field w-100\">\n  <mat-label>Input Your House Price</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"housePrice\" (blur)=\"repaymentCalculation()\" >\n  <button mat-button *ngIf=\"housePrice\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"housePrice=0\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n<mat-form-field class=\"example-form-field w-100\">\n  <mat-label>Input Your Loan Term</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"term\" (blur)=\"repaymentCalculation()\" >\n  <button mat-button *ngIf=\"term\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"term=0\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n<mat-form-field class=\"example-form-field w-100\">\n  <mat-label>Input Your Interest Rate</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"interestRate\" (blur)=\"repaymentCalculation()\" >\n  <button mat-button *ngIf=\"interestRate\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"interestRate=0\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n<mat-form-field class=\"example-form-field w-100\">\n  <mat-label>Input Your Deposit</mat-label>\n  <input matInput type=\"text\" [(ngModel)]=\"deposit\" (blur)=\"repaymentCalculation()\" >\n  <button mat-button *ngIf=\"deposit\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"deposit=0\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n  <button mat-raised-button (click)=\"repaymentCalculation()\">Get Your Result</button>\n\n<div class=\"results-wrapper my-5\" *ngIf=\"repay!==0\">\n  <h3>Your repayment would be ${{repay.toFixed(2)}} per week</h3>\n  <h4>Which means you could get ${{(repay*52/12).toFixed(2)}} per month...</h4>\n</div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaxCalcService {\n\n  constructor() { }\n\n  calculateAfterTax(input: number): number{\n    // todo: we need a better way to do this\n    let income = input;\n    if (income <= 18200){\n      income = income - (0.02 * income);\n    }else if (income <= 45000) {\n      income = income - 0.19 * (income - 18200) - (0.02 * income);\n    }else if (income <= 120000) {\n      income = income - 5092 - (0.325 * (income - 45000)) - (0.02 * income);\n    }else if (income <= 180000) {\n      income = income - 29467 - (0.37 * (income - 120000)) - (0.02 * income);\n    }else {\n      income = income - 51667 - (0.45 * (income - 180000)) - (0.02 * income);\n    }\n\n    return income;\n  }\n\n  calculateBeforeTax(input: number): number{\n    let income = input;\n    // todo: we need a better way to do this\n    if (income <= 17836){\n      income = income / 0.98;\n    }else if (income <= 39008) {\n      income = (income - (0.19 * 18200)) / 0.79;\n    }else if (income <= 88133) {\n      income = (income + 5092 - (0.325 * 45000)) / 0.655;\n    }else if (income <= 124733) {\n      income = (income + 29467 - (0.37 * 120000)) / 0.61;\n    }else {\n      income = (income + 51667 - (0.45 * 180000)) / 0.53;\n    }\n\n    return income\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-string-refactor',\n  templateUrl: './string-refactor.component.html',\n  styleUrls: ['./string-refactor.component.css']\n})\nexport class StringRefactorComponent implements OnInit {\n\n  inputValue: string;\n\n  outputValue: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  processValue(): void{\n    if (this.inputValue?.length){\n      const inputArr = this.inputValue.split('-');\n      this.outputValue = inputArr.reduce((acc, newValue) => {\n        return this.capitalize(acc) + '.' + this.capitalize(newValue);\n      });\n      const date = new Date();\n      this.outputValue += '.' + date.getFullYear() + '.' + date.getMonth();\n    }\n  }\n\n  capitalize(value: string){\n    if (value.length){\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n    return value;\n  }\n}\n","<div class=\"container\">\n  <mat-form-field class=\"example-form-field w-100\">\n    <mat-label>Input Your String</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"inputValue\" (blur)=\"processValue()\" >\n    <button mat-button *ngIf=\"inputValue?.length\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"inputValue=''\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n  <div class=\"results-wrapper my-5\" *ngIf=\"outputValue?.length\">\n    <h2>Result: {{outputValue}}</h2>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {TaxCalcService} from \"../services/tax-calc.service\";\n\n@Component({\n  selector: 'app-tax-return-calculator',\n  templateUrl: './tax-return-calculator.component.html',\n  styleUrls: ['./tax-return-calculator.component.css']\n})\nexport class TaxReturnCalculatorComponent implements OnInit {\n\n  taxReturnForm = new FormGroup({\n    totalIncome: new FormControl(0, Validators.required),\n    nonTaxableIncome: new FormControl(0, Validators.required),\n  });\n\n  totalTax: number;\n  actualTax: number;\n  saving: number;\n\n  constructor(\n    private taxService: TaxCalcService\n  ) { }\n\n\n  ngOnInit(): void {\n  }\n\n  getFormValue(name: string): any{\n    return this.taxReturnForm.get(name).value;\n  }\n\n  setFormValue(name: string, value: any): void{\n    this.taxReturnForm.get(name).setValue(value);\n  }\n\n  calculate(): void{\n    this.totalTax = undefined;\n    this.actualTax = undefined;\n    this.saving = undefined;\n    if (this.taxReturnForm.valid){\n      const totalIncome = this.taxReturnForm.get('totalIncome').value as number;\n      const actualIncome = totalIncome - (this.taxReturnForm.get('nonTaxableIncome').value as number);\n      const totalAfterTaxIncome = this.taxService.calculateAfterTax(totalIncome);\n      const actualAfterTaxIncome = this.taxService.calculateAfterTax(actualIncome);\n      this.totalTax = totalIncome - totalAfterTaxIncome;\n      this.actualTax = actualIncome - actualAfterTaxIncome;\n      this.saving = this.totalTax - this.actualTax;\n    }\n  }\n}\n","<h1 class=\"text-center income-title\">Income Calculator</h1>\n<div class=\"text-align-left income-main-container\">\n  <form [formGroup]=\"taxReturnForm\">\n    <div class=\"\" >\n      <mat-form-field class=\"example-form-field w-100\">\n        <mat-label>Input Your Income Before Tax</mat-label>\n        <input matInput type=\"text\" formControlName=\"totalIncome\" >\n        <button mat-button *ngIf=\"getFormValue('totalIncome')\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"setFormValue('totalIncome',0)\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n    <div class=\"\" >\n      <mat-form-field class=\"example-form-field w-100\">\n        <mat-label>Input Your Non Taxable Income Part</mat-label>\n        <input matInput type=\"text\" formControlName=\"nonTaxableIncome\" >\n        <button mat-button *ngIf=\"getFormValue('nonTaxableIncome')\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"setFormValue('nonTaxableIncome',0)\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n    </div>\n  </form>\n\n  <div class=\"submit-button-wrapper text-center mt-3\" *ngIf=\"taxReturnForm.valid\">\n    <button  mat-raised-button color=\"primary\" class=\"submit-button\" (click)=\"calculate()\">\n      GO!\n    </button>\n  </div>\n  <div class=\"results-wrapper mb-5\" *ngIf=\"saving!==undefined\">\n    <h3>Tax before non-taxable {{totalTax}}</h3>\n    <h3>Tax after non-taxable {{actualTax}}</h3>\n    <h3>Total savings {{saving}}</h3>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}